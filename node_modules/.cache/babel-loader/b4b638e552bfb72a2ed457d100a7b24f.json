{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { LogLevel } from \"@azure/msal-browser\";\n\n/**\n * Configuration object to be passed to MSAL instance on creation. \n * For a full list of MSAL.js configuration parameters, visit:\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md \n */\n\nexport const msalConfig = {\n  auth: {\n    clientId: \"Enter_the_Application_Id_Here\",\n    authority: \"https://login.microsoftonline.com/Enter_the_Tenant_Info_Here\",\n    redirectUri: \"http://localhost:3000\"\n  },\n  cache: {\n    cacheLocation: \"sessionStorage\",\n    // This configures where your cache will be stored\n    storeAuthStateInCookie: false // Set this to \"true\" if you are having issues on IE11 or Edge\n  },\n\n  system: {\n    loggerOptions: {\n      loggerCallback: (level, message, containsPii) => {\n        if (containsPii) {\n          return;\n        }\n        switch (level) {\n          case LogLevel.Error:\n            console.error(message);\n            return;\n          case LogLevel.Info:\n            console.info(message);\n            return;\n          case LogLevel.Verbose:\n            console.debug(message);\n            return;\n          case LogLevel.Warning:\n            console.warn(message);\n            return;\n          default:\n            return;\n        }\n      }\n    }\n  }\n};\n\n/**\n * Scopes you add here will be prompted for user consent during sign-in.\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\n * For more information about OIDC scopes, visit: \n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\n */\nexport const loginRequest = {\n  scopes: [\"User.Read\"]\n};\n\n/**\n * Add here the scopes to request when obtaining an access token for MS Graph API. For more information, see:\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/resources-and-scopes.md\n */\nexport const graphConfig = {\n  graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\"\n};","map":{"version":3,"names":["LogLevel","msalConfig","auth","clientId","authority","redirectUri","cache","cacheLocation","storeAuthStateInCookie","system","loggerOptions","loggerCallback","level","message","containsPii","Error","console","error","Info","info","Verbose","debug","Warning","warn","loginRequest","scopes","graphConfig","graphMeEndpoint"],"sources":["/home/user/mischangas/src/authConfig.js"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { LogLevel } from \"@azure/msal-browser\";\n\n/**\n * Configuration object to be passed to MSAL instance on creation. \n * For a full list of MSAL.js configuration parameters, visit:\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md \n */\n\nexport const msalConfig = {\n    auth: {\n        clientId: \"Enter_the_Application_Id_Here\",\n        authority: \"https://login.microsoftonline.com/Enter_the_Tenant_Info_Here\",\n        redirectUri: \"http://localhost:3000\",\n    },\n    cache: {\n        cacheLocation: \"sessionStorage\", // This configures where your cache will be stored\n        storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\n    },\n    system: {\t\n        loggerOptions: {\t\n            loggerCallback: (level, message, containsPii) => {\t\n                if (containsPii) {\t\t\n                    return;\t\t\n                }\t\t\n                switch (level) {\n                    case LogLevel.Error:\n                        console.error(message);\n                        return;\n                    case LogLevel.Info:\n                        console.info(message);\n                        return;\n                    case LogLevel.Verbose:\n                        console.debug(message);\n                        return;\n                    case LogLevel.Warning:\n                        console.warn(message);\n                        return;\n                    default:\n                        return;\n                }\t\n            }\t\n        }\t\n    }\n};\n\n/**\n * Scopes you add here will be prompted for user consent during sign-in.\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\n * For more information about OIDC scopes, visit: \n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\n */\nexport const loginRequest = {\n    scopes: [\"User.Read\"]\n};\n\n/**\n * Add here the scopes to request when obtaining an access token for MS Graph API. For more information, see:\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/resources-and-scopes.md\n */\nexport const graphConfig = {\n    graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\",\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,SAASA,QAAQ,QAAQ,qBAAqB;;AAE9C;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,UAAU,GAAG;EACtBC,IAAI,EAAE;IACFC,QAAQ,EAAE,+BAA+B;IACzCC,SAAS,EAAE,8DAA8D;IACzEC,WAAW,EAAE;EACjB,CAAC;EACDC,KAAK,EAAE;IACHC,aAAa,EAAE,gBAAgB;IAAE;IACjCC,sBAAsB,EAAE,KAAK,CAAE;EACnC,CAAC;;EACDC,MAAM,EAAE;IACJC,aAAa,EAAE;MACXC,cAAc,EAAEA,CAACC,KAAK,EAAEC,OAAO,EAAEC,WAAW,KAAK;QAC7C,IAAIA,WAAW,EAAE;UACb;QACJ;QACA,QAAQF,KAAK;UACT,KAAKZ,QAAQ,CAACe,KAAK;YACfC,OAAO,CAACC,KAAK,CAACJ,OAAO,CAAC;YACtB;UACJ,KAAKb,QAAQ,CAACkB,IAAI;YACdF,OAAO,CAACG,IAAI,CAACN,OAAO,CAAC;YACrB;UACJ,KAAKb,QAAQ,CAACoB,OAAO;YACjBJ,OAAO,CAACK,KAAK,CAACR,OAAO,CAAC;YACtB;UACJ,KAAKb,QAAQ,CAACsB,OAAO;YACjBN,OAAO,CAACO,IAAI,CAACV,OAAO,CAAC;YACrB;UACJ;YACI;QACR;MACJ;IACJ;EACJ;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMW,YAAY,GAAG;EACxBC,MAAM,EAAE,CAAC,WAAW;AACxB,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMC,WAAW,GAAG;EACvBC,eAAe,EAAE;AACrB,CAAC"},"metadata":{},"sourceType":"module"}